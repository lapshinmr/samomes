var m=Object.defineProperty;var l=(i,n,t)=>n in i?m(i,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[n]=t;var r=(i,n,t)=>l(i,typeof n!="symbol"?n+"":n,t);import{a as h}from"./pIIQsBHX.js";import{t as a,b as V}from"./BBggtmFf.js";import{f}from"./DHChNhVW.js";class R extends h{constructor(t){super(t);r(this,"tankVolume");this.tankVolume=t.tankVolume}countReagentUnitConcsByAmount(t,o=""){const e={};return a(t.ions).forEach(([s,u])=>{const c=t.density??1;(o===""||o!==s)&&(e[s]=f(t.amount/this.totalVolume/this.tankVolume*u*1e3*c))}),e}countRecipeUnitConcsByAmounts(t=""){const o={};return!this.totalVolume||!this.tankVolume||this.reagents.forEach(e=>{o[e.key]=this.countReagentUnitConcsByAmount(e,t)}),o}countReagentAmountByUnitConc(t,o,e){if(!this.totalVolume||!this.tankVolume)return;const s=o.density??1;return t*this.tankVolume*this.totalVolume/1e3/o.ions[e]/s}countRecipeIonUnitConcs(t){const o={};return V(t).forEach(e=>{a(e).forEach(([s,u])=>{o[s]===void 0&&(o[s]=0),o[s]+=u})}),o}toJson(){return{name:this.name,description:this.description,tankVolume:this.tankVolume,reagents:this.reagents.map(t=>({...t.toJson()}))}}}export{R as F};
